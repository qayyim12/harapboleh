


                                       VERSION CONTROL




1-24b9da6552252987aa493b52f8696cd6d3b00373
You will see these hash values all over the place in Git because it uses them so much. In fact, Git stores everything in its database not by file name but by the hash value of its contents.

The mechanism that Git uses for this checksumming is called a SHA-1 hash. This is a 40-character string composed of hexadecimal characters (0–9 and a–f) and calculated based on the contents of a file or directory structure in Git. A SHA-1 hash looks something like this:

2-Git Generally Only Adds Data-die x kan buat selain dr add data 7simpan data

3-3 rukun git/the three states

MODIFIED means that you have changed the file but have not committed it to your database yet.

STAGED means that you have marked a modified file in its current version to go into your next commit snapshot.

COMMITTED means that the data is safely stored in your local database.


4-the three main sections of a Git project: the working tree, the staging area,git directoriy(repository)

-The working tree is a single checkout of one version of the project. These files are pulled out of the compressed database in the Git directory and placed on disk for you to use or modify.

-The staging area is a file, generally contained in your Git directory, that stores information about what will go into your next commit. Its technical name in Git parlance is the “index”, but the phrase “staging area” works just as well.

-The Git directory is where Git stores the metadata and object database for your project. This is the most important part of Git, and it is what is copied when you clone a repository from another computer.

5-The basic Git workflow goes something like this:

-You modify files in your working tree.

-You selectively stage just those changes you want to be part of your next commit, which adds only those changes to the staging area.

-You do a commit, which takes the files as they are in the staging area and stores that snapshot permanently to your Git directory.

6-git can unified the change file that many people work on it(maybe a project together)and it is called merge,so that it is already there when u open that repository and u can know who edit it.
-U can also know why you edit or someone edit the file(there are space for u to type why u do the change)
-If someone is editing the part that u are also editing it on 1 time/at the same time,when it unified it will show that others editing and yours and can pick how to compiled it to one
